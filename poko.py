# -*- coding: utf-8 -*-
"""POKO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SPL1J-LCYmjsV4lvlYwzwTWQ2osXpw8q

## POKO GAME 
playing sound

import os
from playsound import playsound
file = "ball_jump_sound.wav"
os.system("mpg123 " + file)

import os
file = "ball_jump_sound.wav"
os.system("mpg123 " + file)

from Tkinter import *
import tkSnack
root = Tk()
tkSnack.initializeSnack(root)
snd = tkSnack.Sound()
snd.read('sound.wav')
snd.play(blocking=1)

from pydub import AudioSegment
from pydub.playback import play
song = AudioSegment.from_wav("ball_jump_sound.wav")
play(song)
"""

import turtle
import winsound

win=turtle.Screen()

win.title("POKO by @Akash")
win.bgcolor("black")
win.setup(width=800,height=500)
win.tracer(0) #starts the window from updating

# Initialize store

score_a=0
score_b=0

# paddle A
paddle_a=turtle.Turtle()
paddle_a.speed(0)
paddle_a.shape("square")
paddle_a.color("white")
paddle_a.shapesize(stretch_wid=5,stretch_len=0.5)
paddle_a.penup()
paddle_a.goto(-355,0)

# paddle B
paddle_b=turtle.Turtle()
paddle_b.speed(0)
paddle_b.shape("square")
paddle_b.color("white")
paddle_b.shapesize(stretch_wid=5, stretch_len=0.5)
paddle_b.penup()
paddle_b.goto(350,0)

# ball
ball=turtle.Turtle()
ball.speed(0)
ball.shape("circle")
ball.color("white")
ball.shapesize()
ball.penup()
ball.goto(0,0)
ball.dx=0.20
ball.dy=-0.20 # every time the ball moves by (value) px
#Function
def paddle_a_up():
  y=paddle_a.ycor() #returns the y coardinate
  y+=20
  paddle_a.sety(y)

def paddle_a_down():
  y = paddle_a.ycor()  # returns the y coardinate
  y -= 20
  paddle_a.sety(y)

def paddle_b_up():
  y=paddle_b.ycor()
  y+=20
  paddle_b.sety(y)

def paddle_b_down():
  y = paddle_b.ycor()
  y -= 20
  paddle_b.sety(y)

# Pen

pen=turtle.Turtle()
pen.speed(0)
pen.color("white")
pen.penup()
pen.hideturtle()
pen.goto(0,200)
pen.write("Player A: 0 Player B: 0", align="center",font=("Lucida console",11,"normal"))

#keyboard binding
win.listen()
win.onkeypress(paddle_a_up,"w")
win.onkeypress(paddle_a_down, "s")
win.onkeypress(paddle_b_up, "Up")
win.onkeypress(paddle_b_down, "Down")
#main game loop
while True:
  win.update() #every time when we run the program it will update the window 

  # move the ball 
  ball.setx(ball.xcor() + ball.dx)
  ball.sety(ball.ycor() + ball.dy)

  #Border checking
  if ball.ycor() > 240:
    ball.sety(240)
    ball.dy*=-1
    winsound.PlaySound('ball_jump_sound.wav',winsound.SND_ASYNC)

  if ball.ycor() < -240:
    ball.sety(-240)
    ball.dy *= -1
    winsound.PlaySound('ball_jump_sound.wav',winsound.SND_ASYNC)

  if ball.xcor() > 380:
    ball.goto(0,0)
    ball.dx*=-1
    #winsound.PlaySound('ball_jump_sound.wav',winsound.SND_ASYNC)
    score_a+=1
    pen.clear()
    pen.write("Player A: {} Player B: {}".format(score_a,score_b), align="center",font=("Lucida console",11,"normal"))
  
  if ball.xcor() < -390:
    ball.goto(0, 0)
    ball.dx *= -1
    #winsound.PlaySound('ball_jump_sound.wav',winsound.SND_ASYNC)
    score_b+=1
    pen.clear()
    pen.write("Player A: {} Player B: {}".format(score_a,score_b), align="center",font=("Lucida console",11,"normal"))


  #paddle and collision
  if (ball.xcor() > 340 and ball.xcor() < 400) and ( ball.ycor() < paddle_b.ycor()+40 and ball.ycor() >paddle_b.ycor()-40 ):
    ball.setx(340)
    ball.dx *= -1
    winsound.PlaySound('ball_jump_sound.wav',winsound.SND_ASYNC)
  if (ball.xcor()  < -340 and ball.xcor() > -400) and (ball.ycor() < paddle_a.ycor()+40 and ball.ycor() > paddle_a.ycor()-40):
    ball.setx(-340)
    ball.dx *= -1
    winsound.PlaySound('ball_jump_sound.wav',winsound.SND_ASYNC)